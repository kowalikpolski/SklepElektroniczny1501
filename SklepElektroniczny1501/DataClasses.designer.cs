#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SklepElektroniczny1501
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sklep_elektroniczny")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertkategoria(kategoria instance);
    partial void Updatekategoria(kategoria instance);
    partial void Deletekategoria(kategoria instance);
    partial void Insertprodukt(produkt instance);
    partial void Updateprodukt(produkt instance);
    partial void Deleteprodukt(produkt instance);
    partial void Insertprodukt_kategoria(produkt_kategoria instance);
    partial void Updateprodukt_kategoria(produkt_kategoria instance);
    partial void Deleteprodukt_kategoria(produkt_kategoria instance);
    partial void Insertzamowienie(zamowienie instance);
    partial void Updatezamowienie(zamowienie instance);
    partial void Deletezamowienie(zamowienie instance);
    partial void Insertzamowienie_produkt(zamowienie_produkt instance);
    partial void Updatezamowienie_produkt(zamowienie_produkt instance);
    partial void Deletezamowienie_produkt(zamowienie_produkt instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::SklepElektroniczny1501.Properties.Settings.Default.masterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<kategoria> kategorias
		{
			get
			{
				return this.GetTable<kategoria>();
			}
		}
		
		public System.Data.Linq.Table<produkt> produkts
		{
			get
			{
				return this.GetTable<produkt>();
			}
		}
		
		public System.Data.Linq.Table<produkt_kategoria> produkt_kategorias
		{
			get
			{
				return this.GetTable<produkt_kategoria>();
			}
		}
		
		public System.Data.Linq.Table<zamowienie> zamowienies
		{
			get
			{
				return this.GetTable<zamowienie>();
			}
		}
		
		public System.Data.Linq.Table<zamowienie_produkt> zamowienie_produkts
		{
			get
			{
				return this.GetTable<zamowienie_produkt>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.kategoria")]
	public partial class kategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _kategoria1;
		
		private EntitySet<produkt_kategoria> _produkt_kategorias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onkategoria1Changing(string value);
    partial void Onkategoria1Changed();
    #endregion
		
		public kategoria()
		{
			this._produkt_kategorias = new EntitySet<produkt_kategoria>(new Action<produkt_kategoria>(this.attach_produkt_kategorias), new Action<produkt_kategoria>(this.detach_produkt_kategorias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kategoria", Storage="_kategoria1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string kategoria1
		{
			get
			{
				return this._kategoria1;
			}
			set
			{
				if ((this._kategoria1 != value))
				{
					this.Onkategoria1Changing(value);
					this.SendPropertyChanging();
					this._kategoria1 = value;
					this.SendPropertyChanged("kategoria1");
					this.Onkategoria1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kategoria_produkt_kategoria", Storage="_produkt_kategorias", ThisKey="id", OtherKey="id_kategoria")]
		public EntitySet<produkt_kategoria> produkt_kategorias
		{
			get
			{
				return this._produkt_kategorias;
			}
			set
			{
				this._produkt_kategorias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_produkt_kategorias(produkt_kategoria entity)
		{
			this.SendPropertyChanging();
			entity.kategoria = this;
		}
		
		private void detach_produkt_kategorias(produkt_kategoria entity)
		{
			this.SendPropertyChanging();
			entity.kategoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produkt")]
	public partial class produkt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nazwa;
		
		private string _model;
		
		private string _opis;
		
		private int _ilosc_dostepna;
		
		private decimal _cena;
		
		private EntitySet<produkt_kategoria> _produkt_kategorias;
		
		private EntitySet<zamowienie_produkt> _zamowienie_produkts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnmodelChanging(string value);
    partial void OnmodelChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    partial void Onilosc_dostepnaChanging(int value);
    partial void Onilosc_dostepnaChanged();
    partial void OncenaChanging(decimal value);
    partial void OncenaChanged();
    #endregion
		
		public produkt()
		{
			this._produkt_kategorias = new EntitySet<produkt_kategoria>(new Action<produkt_kategoria>(this.attach_produkt_kategorias), new Action<produkt_kategoria>(this.detach_produkt_kategorias));
			this._zamowienie_produkts = new EntitySet<zamowienie_produkt>(new Action<zamowienie_produkt>(this.attach_zamowienie_produkts), new Action<zamowienie_produkt>(this.detach_zamowienie_produkts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="VarChar(100)")]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilosc_dostepna", DbType="Int NOT NULL")]
		public int ilosc_dostepna
		{
			get
			{
				return this._ilosc_dostepna;
			}
			set
			{
				if ((this._ilosc_dostepna != value))
				{
					this.Onilosc_dostepnaChanging(value);
					this.SendPropertyChanging();
					this._ilosc_dostepna = value;
					this.SendPropertyChanged("ilosc_dostepna");
					this.Onilosc_dostepnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Decimal(18,0) NOT NULL")]
		public decimal cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this.OncenaChanging(value);
					this.SendPropertyChanging();
					this._cena = value;
					this.SendPropertyChanged("cena");
					this.OncenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produkt_produkt_kategoria", Storage="_produkt_kategorias", ThisKey="id", OtherKey="id_produkt")]
		public EntitySet<produkt_kategoria> produkt_kategorias
		{
			get
			{
				return this._produkt_kategorias;
			}
			set
			{
				this._produkt_kategorias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produkt_zamowienie_produkt", Storage="_zamowienie_produkts", ThisKey="id", OtherKey="id_produkt")]
		public EntitySet<zamowienie_produkt> zamowienie_produkts
		{
			get
			{
				return this._zamowienie_produkts;
			}
			set
			{
				this._zamowienie_produkts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_produkt_kategorias(produkt_kategoria entity)
		{
			this.SendPropertyChanging();
			entity.produkt = this;
		}
		
		private void detach_produkt_kategorias(produkt_kategoria entity)
		{
			this.SendPropertyChanging();
			entity.produkt = null;
		}
		
		private void attach_zamowienie_produkts(zamowienie_produkt entity)
		{
			this.SendPropertyChanging();
			entity.produkt = this;
		}
		
		private void detach_zamowienie_produkts(zamowienie_produkt entity)
		{
			this.SendPropertyChanging();
			entity.produkt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produkt_kategoria")]
	public partial class produkt_kategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_produkt;
		
		private int _id_kategoria;
		
		private EntityRef<kategoria> _kategoria;
		
		private EntityRef<produkt> _produkt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_produktChanging(int value);
    partial void Onid_produktChanged();
    partial void Onid_kategoriaChanging(int value);
    partial void Onid_kategoriaChanged();
    #endregion
		
		public produkt_kategoria()
		{
			this._kategoria = default(EntityRef<kategoria>);
			this._produkt = default(EntityRef<produkt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produkt", DbType="Int NOT NULL")]
		public int id_produkt
		{
			get
			{
				return this._id_produkt;
			}
			set
			{
				if ((this._id_produkt != value))
				{
					if (this._produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produktChanging(value);
					this.SendPropertyChanging();
					this._id_produkt = value;
					this.SendPropertyChanged("id_produkt");
					this.Onid_produktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kategoria", DbType="Int NOT NULL")]
		public int id_kategoria
		{
			get
			{
				return this._id_kategoria;
			}
			set
			{
				if ((this._id_kategoria != value))
				{
					if (this._kategoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_kategoriaChanging(value);
					this.SendPropertyChanging();
					this._id_kategoria = value;
					this.SendPropertyChanged("id_kategoria");
					this.Onid_kategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kategoria_produkt_kategoria", Storage="_kategoria", ThisKey="id_kategoria", OtherKey="id", IsForeignKey=true)]
		public kategoria kategoria
		{
			get
			{
				return this._kategoria.Entity;
			}
			set
			{
				kategoria previousValue = this._kategoria.Entity;
				if (((previousValue != value) 
							|| (this._kategoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._kategoria.Entity = null;
						previousValue.produkt_kategorias.Remove(this);
					}
					this._kategoria.Entity = value;
					if ((value != null))
					{
						value.produkt_kategorias.Add(this);
						this._id_kategoria = value.id;
					}
					else
					{
						this._id_kategoria = default(int);
					}
					this.SendPropertyChanged("kategoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produkt_produkt_kategoria", Storage="_produkt", ThisKey="id_produkt", OtherKey="id", IsForeignKey=true)]
		public produkt produkt
		{
			get
			{
				return this._produkt.Entity;
			}
			set
			{
				produkt previousValue = this._produkt.Entity;
				if (((previousValue != value) 
							|| (this._produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produkt.Entity = null;
						previousValue.produkt_kategorias.Remove(this);
					}
					this._produkt.Entity = value;
					if ((value != null))
					{
						value.produkt_kategorias.Add(this);
						this._id_produkt = value.id;
					}
					else
					{
						this._id_produkt = default(int);
					}
					this.SendPropertyChanged("produkt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zamowienie")]
	public partial class zamowienie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _numer_zamowienia;
		
		private System.DateTime _data_zamowienia;
		
		private EntitySet<zamowienie_produkt> _zamowienie_produkts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onnumer_zamowieniaChanging(string value);
    partial void Onnumer_zamowieniaChanged();
    partial void Ondata_zamowieniaChanging(System.DateTime value);
    partial void Ondata_zamowieniaChanged();
    #endregion
		
		public zamowienie()
		{
			this._zamowienie_produkts = new EntitySet<zamowienie_produkt>(new Action<zamowienie_produkt>(this.attach_zamowienie_produkts), new Action<zamowienie_produkt>(this.detach_zamowienie_produkts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numer_zamowienia", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string numer_zamowienia
		{
			get
			{
				return this._numer_zamowienia;
			}
			set
			{
				if ((this._numer_zamowienia != value))
				{
					this.Onnumer_zamowieniaChanging(value);
					this.SendPropertyChanging();
					this._numer_zamowienia = value;
					this.SendPropertyChanged("numer_zamowienia");
					this.Onnumer_zamowieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_zamowienia", DbType="Date NOT NULL")]
		public System.DateTime data_zamowienia
		{
			get
			{
				return this._data_zamowienia;
			}
			set
			{
				if ((this._data_zamowienia != value))
				{
					this.Ondata_zamowieniaChanging(value);
					this.SendPropertyChanging();
					this._data_zamowienia = value;
					this.SendPropertyChanged("data_zamowienia");
					this.Ondata_zamowieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zamowienie_zamowienie_produkt", Storage="_zamowienie_produkts", ThisKey="id", OtherKey="id_zamowienie")]
		public EntitySet<zamowienie_produkt> zamowienie_produkts
		{
			get
			{
				return this._zamowienie_produkts;
			}
			set
			{
				this._zamowienie_produkts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zamowienie_produkts(zamowienie_produkt entity)
		{
			this.SendPropertyChanging();
			entity.zamowienie = this;
		}
		
		private void detach_zamowienie_produkts(zamowienie_produkt entity)
		{
			this.SendPropertyChanging();
			entity.zamowienie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zamowienie_produkt")]
	public partial class zamowienie_produkt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_produkt;
		
		private int _id_zamowienie;
		
		private int _ilosc;
		
		private decimal _cena;
		
		private EntityRef<produkt> _produkt;
		
		private EntityRef<zamowienie> _zamowienie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_produktChanging(int value);
    partial void Onid_produktChanged();
    partial void Onid_zamowienieChanging(int value);
    partial void Onid_zamowienieChanged();
    partial void OniloscChanging(int value);
    partial void OniloscChanged();
    partial void OncenaChanging(decimal value);
    partial void OncenaChanged();
    #endregion
		
		public zamowienie_produkt()
		{
			this._produkt = default(EntityRef<produkt>);
			this._zamowienie = default(EntityRef<zamowienie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produkt", DbType="Int NOT NULL")]
		public int id_produkt
		{
			get
			{
				return this._id_produkt;
			}
			set
			{
				if ((this._id_produkt != value))
				{
					if (this._produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produktChanging(value);
					this.SendPropertyChanging();
					this._id_produkt = value;
					this.SendPropertyChanged("id_produkt");
					this.Onid_produktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zamowienie", DbType="Int NOT NULL")]
		public int id_zamowienie
		{
			get
			{
				return this._id_zamowienie;
			}
			set
			{
				if ((this._id_zamowienie != value))
				{
					if (this._zamowienie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zamowienieChanging(value);
					this.SendPropertyChanging();
					this._id_zamowienie = value;
					this.SendPropertyChanged("id_zamowienie");
					this.Onid_zamowienieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilosc", DbType="Int NOT NULL")]
		public int ilosc
		{
			get
			{
				return this._ilosc;
			}
			set
			{
				if ((this._ilosc != value))
				{
					this.OniloscChanging(value);
					this.SendPropertyChanging();
					this._ilosc = value;
					this.SendPropertyChanged("ilosc");
					this.OniloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Money NOT NULL")]
		public decimal cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this.OncenaChanging(value);
					this.SendPropertyChanging();
					this._cena = value;
					this.SendPropertyChanged("cena");
					this.OncenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produkt_zamowienie_produkt", Storage="_produkt", ThisKey="id_produkt", OtherKey="id", IsForeignKey=true)]
		public produkt produkt
		{
			get
			{
				return this._produkt.Entity;
			}
			set
			{
				produkt previousValue = this._produkt.Entity;
				if (((previousValue != value) 
							|| (this._produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produkt.Entity = null;
						previousValue.zamowienie_produkts.Remove(this);
					}
					this._produkt.Entity = value;
					if ((value != null))
					{
						value.zamowienie_produkts.Add(this);
						this._id_produkt = value.id;
					}
					else
					{
						this._id_produkt = default(int);
					}
					this.SendPropertyChanged("produkt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zamowienie_zamowienie_produkt", Storage="_zamowienie", ThisKey="id_zamowienie", OtherKey="id", IsForeignKey=true)]
		public zamowienie zamowienie
		{
			get
			{
				return this._zamowienie.Entity;
			}
			set
			{
				zamowienie previousValue = this._zamowienie.Entity;
				if (((previousValue != value) 
							|| (this._zamowienie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zamowienie.Entity = null;
						previousValue.zamowienie_produkts.Remove(this);
					}
					this._zamowienie.Entity = value;
					if ((value != null))
					{
						value.zamowienie_produkts.Add(this);
						this._id_zamowienie = value.id;
					}
					else
					{
						this._id_zamowienie = default(int);
					}
					this.SendPropertyChanged("zamowienie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
